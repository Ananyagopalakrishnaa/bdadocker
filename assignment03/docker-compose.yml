version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
      - "9093:9093"
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 5s
      timeout: 10s 
      retries: 5
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  streamtopic1:
    build: 
      context: .
      dockerfile: Dockerfile
    environment:
      - DOCKER_BUILDKIT=0
    ports:
      - "5000:5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://streamtopic1:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      kafka:
        condition: service_healthy

  nercontainer:
    build: 
      context: .
      dockerfile: ner.Dockerfile
    volumes:
      - ./nerscript.py:/app/nerscript.py
    depends_on:
      - kafka
      - streamtopic1
    environment:
      - PYSPARK_PYTHON=python3
      - PYSPARK_DRIVER_PYTHON=python3
        
  kafkaconsumer:
    build: 
      context: .
      dockerfile: kafkaconsumer.Dockerfile
    depends_on:
      - kafka
      - nercontainer
